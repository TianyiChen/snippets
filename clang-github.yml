name: C/C++ CI

on:
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ master ]
defaults:
  run:
    working-directory: /tmp/llvm-project/build
env:
  CC: clang-10 -w
  CXX: clang-10 -w -stdlib=libc++ -lc++abi -lc++ -lc++abi  -lstdc++
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: ls
      run: ls /home/runner/work/llvm-project;mv /home/runner/work/llvm-project/llvm-project /tmp;pwd&&ls&&which cmake
      working-directory: .
    - name: install
      run: sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"&&sudo apt install -y libc++-10-dev libc++abi-10-dev cmake;sudo rm $(which cmake)
    - name: configure
      run: cmake -DLLVM_ENABLE_PROJECTS="clang;compiler-rt" -DCMAKE_BUILD_TYPE=Release -DCMAKE_USE_RELATIVE_PATHS=1 -DLLVM_TARGETS_TO_BUILD=X86 -G "Unix Makefiles" ../llvm
    - name: make
      run: make -j2
    - name: compress
      run: |
        tar -czf /tmp/llvm-project.tar.gz .
        tar -czf bin.tar.gz build/bin
        tar -czf lib.tar.gz build/lib
      working-directory: /tmp/llvm-project/
#  Not using artifact because it double compresses files and is not available to anonymous users
#    - uses: actions/upload-artifact@v2
#      with:
#        name: build-artifact
#        path: build.tar.gz
    - name: Get short SHA
      id: commit
      run: echo "::set-output name=commit::$(echo ${GITHUB_SHA} | cut -c1-8)"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{  steps.commit.outputs.commit }}
        release_name: Release ${{ github.sha }} 
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: lib.tar.gz
        asset_name: lib.tar.gz
        asset_content_type: application/gzip
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: bin.tar.gz
        asset_name: bin.tar.gz
        asset_content_type: application/gzip
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /tmp/llvm-project.tar.gz
        asset_name: llvm-project.tar.gz
        asset_content_type: application/gzip
    - name: test
      run: make check-clang -j2 ||true
